# ---
# {{- if (.Values.cascade.cricket).enabled }}
# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: traefik
#   namespace: argocd
# spec:
#   project: default
#   source:
#     repoURL: https://github.com/traefik/traefik-helm-chart
#     path: traefik
#     targetRevision: v30.0.2
#     helm:
#       # https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
#       parameters:
#         - name: logs.level
#           value: DEBUG
#         - name: globalArguments[0]
#           value: "--global.sendanonymoususage=false"
#         - name: deployment.replicas
#           # https://github.com/traefik/traefik-helm-chart/blob/master/EXAMPLES.md#install-with-auto-scaling
#           value: null
#         - name: ingressRoute.dashboard.enabled
#           # https://github.com/traefik/traefik-helm-chart/blob/master/EXAMPLES.md
#           value: "true"
#         - name: service.type
#           # WARN: this is only tested on singletons
#           value: NodePort
#         - name: ports.web.expose.default
#           value: "false"
#         - name: ports.web.redirectTo.port
#           value: websecure
#         - name: ports.web.nodePort
#           value: "80"
#         - name: ports.websecure.asDefault
#           value: "true"
#         - name: ports.websecure.nodePort
#           value: "443"
#         - name: ports.websecure.tls.enabled
#           value: "true"
#         # - name: ports.websecure.tls.certResolver
#         #   value: letsencrypt
#         - name: resources.requests.cpu
#           value: "100m"
#         - name: resources.requests.memory
#           value: "50Mi"
#         - name: resources.limits.cpu
#           value: "300m"
#         - name: resources.limits.memory
#           value: "150Mi"
#         - name: autoscaling.enabled
#           value: "true"
#         - name: autoscaling.maxReplicas
#           value: "5"
#         - name: autoscaling.minReplicas
#           value: "1"
#         - name: autoscaling.metrics[0].type
#           value: "Resource"
#         - name: autoscaling.metrics[0].resource.name
#           value: "cpu"
#         - name: autoscaling.metrics[0].resource.target.type
#           value: "Utilization"
#         - name: autoscaling.metrics[0].resource.target.averageUtilization
#           value: "80"
#         - name: experimental.kubernetesGateway.enabled
#           value: "false"
#         - name: metrics.addInternals
#           value: "false"
#         - name: metrics.otlp.enabled
#           value: "false"
#         - name: tracing.otlp.enabled
#           value: "false"
#         - name: ports.websecure.http3.enabled
#           # TODO look into this, seems like it could be neat
#           value: "false"
#   destination:
#     name: in-cluster
#     namespace: traefik
#   syncPolicy:
#     automated:
#       prune: true
#       allowEmpty: true
#       selfHeal: true
#     syncOptions:
#       - CreateNamespace=true
#       - PruneLast=true
#       - ApplyOutOfSyncOnly=true

# {{- end }}
